---
- hosts: localhost
  become: no
  connection: local
  gather_facts: no
  vars_files:
  - ../vars.yml
  tasks:
  - name: Create masters launch config
    ec2_lc:
      name: openshift-masters-{{ cluster_id }}
      image_id: "{{ ec2_image }}"
      key_name: "{{ ec2_keypair }}"
      region: "{{ ec2_region }}"
      security_groups: "{{ [master_sg_id, node_sg_id] }}"
      instance_type: "{{ ec2_master_instance_type }}"
      assign_public_ip: yes
      #instance_profile_name:
      user_data: "{{ lookup('template', '../templates/user_data_master.j2') }}"
      volumes:
      - volume_size: "{{ os_defaults.masters.vol_sizes.root }}"
        device_type: gp2
        device_name: /dev/sda1
        delete_on_termination: True
      - volume_size: "{{ os_defaults.masters.vol_sizes.etcd }}"
        device_type: gp2
        device_name: /dev/xvdb
        delete_on_termination: True
      - volume_size: "{{ os_defaults.masters.vol_sizes.docker }}"
        device_type: gp2
        device_name: /dev/xvdc
        delete_on_termination: True
      state: present

  - name: Create the masters ASG
    ec2_asg:
      name: openshift-masters-{{ cluster_id }}
      region: "{{ ec2_region }}"
      vpc_zone_identifier: "{{ vpc_subnet_ids }}"
      launch_config_name: openshift-masters-{{ cluster_id }}
      min_size: "{{ os_defaults.masters.count }}"
      max_size: "{{ os_defaults.masters.count }}"
      desired_capacity: "{{ os_defaults.masters.count }}"
      load_balancers:
      - openshift-master-{{ cluster_id }}-internal
      - openshift-master-{{ cluster_id }}-external
      tags:
      - "{{ provider_defaults.ec2.tags | oo_dict_merge(provider_defaults.ec2.master.tags)
            | oo_dict_merge({'Name': 'openshift-master-' ~ cluster_id}) }}"
      wait_for_instances: yes
      state: present
    register: master_asg

  - name: Create node launch configs
    ec2_lc:
      name: openshift-node-{{ cluster_id }}-{{ item.name }}
      image_id: "{{ ec2_image }}"
      key_name: "{{ ec2_keypair }}"
      region: "{{ ec2_region }}"
      security_groups: "{{ [node_sg_id, infra_sg_id] if item.name == 'infra' else [node_sg_id] }}"
      instance_type: "{{ item.instance_type }}"
      assign_public_ip: yes
      #instance_profile_name:
      user_data: "{{ lookup('template', '../templates/user_data_node.j2') }}"
      volumes:
      - volume_size: "{{ item.vol_sizes.root }}"
        device_type: gp2
        device_name: /dev/sda1
        delete_on_termination: True
      - volume_size: "{{ item.vol_sizes.docker }}"
        device_type: gp2
        device_name: /dev/xvdb
        delete_on_termination: True
      state: present
    with_items: os_defaults.regions

  - name: Create the node ASGs
    ec2_asg:
      name: openshift-node-{{ cluster_id }}-{{ item.name }}
      region: "{{ ec2_region }}"
      vpc_zone_identifier: "{{ vpc_subnet_ids }}"
      launch_config_name: openshift-node-{{ cluster_id }}-{{ item.name }}
      min_size: "{{ item.count }}"
      max_size: "{{ item.count }}"
      desired_capacity: "{{ item.count }}"
      load_balancers: "{{ 'openshift-node-' ~ cluster_id ~ '-infra' if item.name == 'infra' else omit }}"
      tags:
      - "{{ provider_defaults.ec2.tags | oo_dict_merge(provider_defaults.ec2.node.tags)
           | oo_dict_merge({'node-region': item.name, 'Name': 'openshift-node-' ~ cluster_id ~ '-' ~ item.name}) }}"
      wait_for_instances: yes
      state: present
    with_items: os_defaults.regions
    register: node_asgs
